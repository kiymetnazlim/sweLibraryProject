@model List<LibraryProject.DTO.ReservationDto>

@{
    ViewData["Title"] = "Reservation Management";
    Layout = "~/Pages/Shared/_AdminLayout.cshtml"; // Layout dosyanızı burada belirleyebilirsiniz.
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}
@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .header {
            background-color: #ff8c00;
            color: white;
            padding: 1rem;
            text-align: center;
            margin-bottom: 2rem;
            position: relative;
        }

        .table th {
            background-color: #f1f1f1;
        }

        .btn-custom {
            background-color: #ff8c00;
            color: white;
        }

        .status-approved {
            color: #28a745; /* Onaylandı Yeşil */
        }

        .status-pending {
            color: #ffc107; /* Bekliyor Sarı */
        }
    </style>
</head>
<body>

    <!-- Ana İçerik -->
    <div class="container mb-5">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Kullanıcı Adı</th>
                    <th>Kitap Adı</th>
                    <th>Rezervasyon Tarihi</th>
                    <th>Durum</th>
                    <th>İşlemler</th>
                </tr>
            </thead>
            <tbody>

                @if (Model == null || !Model.Any())
                {
                    <tr>
                        <td colspan="5">Veri bulunamadı.</td>
                    </tr>
                }
                else
                {
                    @foreach (var reservation in Model)
                    {
                        <tr>
                            <td>@reservation.UserName</td>
                            <td>@reservation.BookTitle</td>
                            <td>@reservation.ReservationDate</td>
                            <td class="@(reservation.ReservationStatus == "Onaylandı" ? "status-approved" : "status-pending")">
                                @reservation.ReservationStatus
                            </td>
                            <td>
                                @if (reservation.ReservationStatus == "Bekliyor")
                                {
                                    <form class="reservation-form" method="post" action="@Url.Action("ReservationManagement", "Reservation")">
                                        <input type="hidden" name="reservationId" value="@reservation.ReservationId" />
                                        <button type="submit" class="btn btn-success btn-sm">Onayla ve Ödünç Ver</button>
                                    </form>
                                }
                                else
                                {
                                    <button class="btn btn-secondary btn-sm">Ödünç verildi</button>
                                }
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>

    <!-- JavaScript for AJAX Form Submission -->
    <script>
        document.querySelectorAll('.reservation-form').forEach(form => {
            form.addEventListener('submit', function (e) {
                e.preventDefault(); // Sayfa yenilenmesini önle

                const url = this.action;
                const formData = new FormData(this);

                fetch(url, {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Başarı mesajını göster ve güncelle
                        const button = form.querySelector('button');
                        button.textContent = 'Ödünç verildi';
                        button.classList.remove('btn-success');
                        button.classList.add('btn-secondary');
                        button.disabled = true;

                        // Kitap durumunu güncelle
                        const row = button.closest('tr');
                        const statusCell = row.querySelector('td:nth-child(4)');
                        statusCell.textContent = 'Onaylandı';
                        statusCell.classList.remove('status-pending');
                        statusCell.classList.add('status-approved');
                    } else {
                        // Hata mesajını göster
                        alert('Hata: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Bir hata oluştu. Lütfen tekrar deneyin.');
                });
            });
        });
    </script>
</body>
</html>